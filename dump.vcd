$date
Wed Aug 28 03:12:52 2024
$end
$version
Riviera-PRO Version 2023.04.112.8911
$end
$timescale
1 ns
$end

$scope module tb $end
$var reg 1 ! clk $end

$scope module _if $end
$var reg 1 " clk $end
$var reg 1 # rstn $end
$var reg 1 $ vld $end
$var reg 8 % addr [7:0] $end
$var reg 16 & data [15:0] $end
$var reg 8 ' addr_a [7:0] $end
$var reg 16 ( data_a [15:0] $end
$var reg 8 ) addr_b [7:0] $end
$var reg 16 * data_b [15:0] $end
$upscope $end


$scope module u0 $end
$var wire 1 + clk $end
$var wire 1 , rstn $end
$var wire 1 - vld $end
$var wire 8 . addr [7:0] $end
$var wire 16 / data [15:0] $end
$var reg 8 0 addr_a [7:0] $end
$var reg 16 1 data_a [15:0] $end
$var reg 8 2 addr_b [7:0] $end
$var reg 16 3 data_b [15:0] $end
$var parameter 32 4 ADDR_WIDTH [31:0] $end
$var parameter 32 5 DATA_WIDTH [31:0] $end
$var parameter 8 6 ADDR_DIV [7:0] $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
0"
0#
x$
bx %
bx &
bx '
bx (
bx )
bx *
0+
0,
x-
bx .
bx /
bx 0
bx 1
bx 2
bx 3
b1000 4
b10000 5
b111111 6
$end
#10
1!
1"
1+
b0 0
b0 1
b0 2
b0 3
b0 '
b0 (
b0 )
b0 *
#20
0!
0"
0+
1#
1,
#30
1!
1"
1+
1$
b1100000 %
b1011010010011100 &
b1011010010011100 /
b1100000 .
1-
#40
0!
0"
0+
#50
1!
1"
1+
1$
b1100000 2
b1011010010011100 3
b11110100 %
b101110001101001 &
b1100000 )
b1011010010011100 *
b101110001101001 /
b11110100 .
#60
0!
0"
0+
#70
1!
1"
1+
1$
b11110100 2
b101110001101001 3
b11101100 %
b1101010111110011 &
b11110100 )
b101110001101001 *
b1101010111110011 /
b11101100 .
#80
0!
0"
0+
#90
1!
1"
1+
1$
b11101100 2
b1101010111110011 3
b1010100 %
b1101111000100 &
b11101100 )
b1101010111110011 *
b1101111000100 /
b1010100 .
#100
0!
0"
0+
#110
1!
1"
1+
1$
b1010100 2
b1101111000100 3
b11010001 %
b1110011110100110 &
b1010100 )
b1101111000100 *
b1110011110100110 /
b11010001 .
#120
0!
0"
0+
#130
1!
1"
1+
1$
b11010001 2
b1110011110100110 3
b11011 %
b1011001101011100 &
b11010001 )
b1110011110100110 *
b1011001101011100 /
b11011 .
#140
0!
0"
0+
#150
1!
1"
1+
1$
b11011 0
b1011001101011100 1
b0 2
b0 3
b11100011 %
b111000001111110 &
b11011 '
b1011001101011100 (
b0 )
b0 *
b111000001111110 /
b11100011 .
#160
0!
0"
0+
#170
1!
1"
1+
1$
b0 0
b0 1
b11100011 2
b111000001111110 3
b11011010 %
b1101000011100 &
b0 '
b0 (
b11100011 )
b111000001111110 *
b1101000011100 /
b11011010 .
#180
0!
0"
0+
#190
1!
1"
1+
1$
b11011010 2
b1101000011100 3
b1000110 %
b1111111001101100 &
b11011010 )
b1101000011100 *
b1111111001101100 /
b1000110 .
#200
0!
0"
0+
#210
1!
1"
1+
1$
b1000110 2
b1111111001101100 3
b10110001 %
b1101010001000010 &
b1000110 )
b1111111001101100 *
b1101010001000010 /
b10110001 .
#220
0!
0"
0+
#230
1!
1"
1+
1$
b10110001 2
b1101010001000010 3
b11100 %
b1000111011001010 &
b10110001 )
b1101010001000010 *
b1000111011001010 /
b11100 .
#240
0!
0"
0+
#250
1!
1"
1+
1$
b11100 0
b1000111011001010 1
b0 2
b0 3
b10010110 %
b100101011111101 &
b11100 '
b1000111011001010 (
b0 )
b0 *
b100101011111101 /
b10010110 .
#260
0!
0"
0+
#270
1!
1"
1+
1$
b0 0
b0 1
b10010110 2
b100101011111101 3
b1010001 %
b1010100111010001 &
b0 '
b0 (
b10010110 )
b100101011111101 *
b1010100111010001 /
b1010001 .
#280
0!
0"
0+
#290
1!
1"
1+
1$
b1010001 2
b1010100111010001 3
b10100001 %
b100011110101100 &
b1010001 )
b1010100111010001 *
b100011110101100 /
b10100001 .
#300
0!
0"
0+
#310
1!
1"
1+
1$
b10100001 2
b100011110101100 3
b10110100 %
b1001000010001111 &
b10100001 )
b100011110101100 *
b1001000010001111 /
b10110100 .
#320
0!
0"
0+
#330
1!
1"
1+
1$
b10110100 2
b1001000010001111 3
b100000 %
b100001111101011 &
b10110100 )
b1001000010001111 *
b100001111101011 /
b100000 .
#340
0!
0"
0+
#350
1!
1"
1+
1$
b100000 0
b100001111101011 1
b0 2
b0 3
b111001 %
b110101111101100 &
b100000 '
b100001111101011 (
b0 )
b0 *
b110101111101100 /
b111001 .
#360
0!
0"
0+
#370
1!
1"
1+
1$
b111001 0
b110101111101100 1
b11111 %
b1100100110101011 &
b111001 '
b110101111101100 (
b1100100110101011 /
b11111 .
#380
0!
0"
0+
#390
1!
1"
1+
1$
b11111 0
b1100100110101011 1
b11100001 %
b1010100111000111 &
b11111 '
b1100100110101011 (
b1010100111000111 /
b11100001 .
#400
0!
0"
0+
#410
1!
1"
1+
1$
b0 0
b0 1
b11100001 2
b1010100111000111 3
b1100111 %
b1101100110010111 &
b0 '
b0 (
b11100001 )
b1010100111000111 *
b1101100110010111 /
b1100111 .
#420
0!
0"
0+
#430
1!
1"
1+
0$
b1100111 2
b1101100110010111 3
b1100111 )
b1101100110010111 *
0-
#440
0!
0"
0+
#450
1!
1"
1+
#460
0!
0"
0+
#470
1!
1"
1+
#480
